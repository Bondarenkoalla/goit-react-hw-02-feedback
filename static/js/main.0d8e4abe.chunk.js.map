{"version":3,"sources":["components/feedback/Notification.js","components/feedback/statistics.js","components/feedback/FeedbackOptions.js","components/feedback/Section.js","components/feedback/feedback.js","App.js","index.js","components/feedback/Feedback.module.scss"],"names":["Notification","Statistics","good","neutral","bad","total","percentage","className","styles","list","FeedbackOptions","onGood","onNeutral","onBad","button","type","onClick","prototype","PropTypes","number","isRequired","Section","title","children","string","Feedback","state","addGoodFeedback","setState","prevState","addNeutralFeedback","addBadFeedback","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mOAIeA,EAHM,WACnB,OAAO,iD,gBCkBMC,EAhBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/C,OAAOD,EAAQ,EACb,qCACE,qBAAIE,UAAWC,IAAOC,KAAtB,UACE,uCAAUP,KACV,0CAAaC,KACb,sCAASC,QAEX,uCAAUC,KACV,sDAAyBC,EAAzB,UAGF,cAAC,EAAD,K,gBCbEI,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,MAAtB,OACtB,qCACE,wBAAQN,UAAWC,IAAOM,OAAQC,KAAK,SAASC,QAASL,EAAzD,kBAGA,wBAAQJ,UAAWC,IAAOM,OAAQC,KAAK,SAASC,QAASJ,EAAzD,qBAGA,wBAAQL,UAAWC,IAAOM,OAAQC,KAAK,SAASC,QAASH,EAAzD,qBAKWH,IACfA,EAAgBO,UAAY,CAC1BN,OAAQO,IAAUC,OAAOC,WACzBR,UAAWM,IAAUC,OAAOC,WAC7BP,MAAOK,IAAUC,OAAOC,YClBzB,IAAMC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MAGUF,IACfA,EAAQJ,UAAY,CAClBK,MAAMJ,IAAUM,OAAOJ,Y,ICoDVK,E,4MAxDbC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPuB,gBAAkB,WAChB,EAAKC,UAAS,SAACC,GACb,MAAO,CAAE3B,KAAM2B,EAAU3B,KAAO,O,EAGpC4B,mBAAqB,WACnB,EAAKF,UAAS,SAACC,GACb,MAAO,CAAE1B,QAAS0B,EAAU1B,QAAU,O,EAG1C4B,eAAiB,WACf,EAAKH,UAAS,SAACC,GACb,MAAO,CAAEzB,IAAKyB,EAAUzB,IAAM,O,EAIlC4B,mBAAqB,WACnB,MAA+B,EAAKN,MAEpC,OAFA,EAAQxB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzB6B,gCAAkC,WAChC,MAA+B,EAAKP,MAA5BxB,EAAR,EAAQA,KACFG,EAAQH,EADd,EAAcC,QAAd,EAAuBC,IAEvB,OAAiB,IAAVC,EAAc,EAAI6B,KAAKC,MAAOjC,EAAOG,EAAS,M,4CAGvD,WACE,OACE,qCACE,cAAC,EAAD,CAASiB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,OAAQyB,KAAKT,gBACbf,UAAWwB,KAAKN,mBAChBjB,MAAOuB,KAAKL,mBAGhB,cAAC,EAAD,CAAST,MAAM,aAAf,SACE,cAAC,EAAD,CACEpB,KAAMkC,KAAKV,MAAMxB,KACjBC,QAASiC,KAAKV,MAAMvB,QACpBC,IAAKgC,KAAKV,MAAMtB,IAChBC,MAAO+B,KAAKJ,qBACZ1B,WAAY8B,KAAKH,6C,GAjDNI,IAAMC,WCEdC,EAJH,WACV,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,yBAAyB,KAAO,uBAAuB,QAAU,6B","file":"static/js/main.0d8e4abe.chunk.js","sourcesContent":["import React from \"react\";\nconst Notification = () => {\n  return <p>No feedback yet</p>;\n};\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Notification from \"./Notification\";\nimport styles from \"./Feedback.module.scss\";\nconst Statistics = ({ good, neutral, bad, total, percentage }) => {\n  return total > 0 ? (\n    <>\n      <ul className={styles.list}>\n        <li>Good:{good}</li>\n        <li>Neutral:{neutral}</li>\n        <li>Bad:{bad}</li>\n      </ul>\n      <p>Total:{total}</p>\n      <p>Positive percentage: {percentage}%</p>\n    </>\n  ) : (\n    <Notification />\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Feedback.module.scss\";\nconst FeedbackOptions = ({ onGood, onNeutral, onBad }) => (\n  <>\n    <button className={styles.button} type=\"button\" onClick={onGood}>\n      Good\n    </button>\n    <button className={styles.button} type=\"button\" onClick={onNeutral}>\n      Neutral\n    </button>\n    <button className={styles.button} type=\"button\" onClick={onBad}>\n      Bad\n    </button>\n  </>\n);\nexport default FeedbackOptions;\nFeedbackOptions.prototype = {\n  onGood: PropTypes.number.isRequired,\n  onNeutral: PropTypes.number.isRequired,\n onBad: PropTypes.number.isRequired,\n\n}","import PropTypes from \"prop-types\";\nimport React from \"react\";\nconst Section = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\nexport default Section;\nSection.prototype = {\n  title:PropTypes.string.isRequired,\n}","import React from \"react\";\n\nimport Statistics from \"./statistics\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Section from \"./Section\";\nclass Feedback extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  addGoodFeedback = () => {\n    this.setState((prevState) => {\n      return { good: prevState.good + 1 };\n    });\n  };\n  addNeutralFeedback = () => {\n    this.setState((prevState) => {\n      return { neutral: prevState.neutral + 1 };\n    });\n  };\n  addBadFeedback = () => {\n    this.setState((prevState) => {\n      return { bad: prevState.bad + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total === 0 ? 0 : Math.round((good / total) * 100);\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onGood={this.addGoodFeedback}\n            onNeutral={this.addNeutralFeedback}\n            onBad={this.addBadFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            percentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from \"react\";\nimport Feedback from \"./components/feedback/feedback\";\n\nconst App = () => {\n  return <Feedback />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__3cqR2\",\"list\":\"Feedback_list__2Zim4\",\"section\":\"Feedback_section__yJNri\"};"],"sourceRoot":""}